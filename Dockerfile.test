# Ultra-Fast Script Validation Test - No FFmpeg download
FROM --platform=linux/arm64 ubuntu:22.04

# Prevent interactive prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install only bash for script validation
RUN apt-get update && apt-get install -y \
    bash \
    grep \
    && rm -rf /var/lib/apt/lists/*

# Copy our scripts for validation
COPY scripts/ /scripts/
RUN chmod +x /scripts/*.sh

# Test 1: Validate all script syntax
RUN echo "🔍 Testing script syntax..." && \
    bash -n /scripts/configure-ffmpeg.sh && \
    bash -n /scripts/configure-ffmpeg-test.sh && \
    bash -n /scripts/configure-ffmpeg-example.sh && \
    bash -n /scripts/build-dependencies.sh && \
    bash -n /scripts/show-progress.sh && \
    bash -n /scripts/docker-entrypoint.sh && \
    echo "✅ All scripts have valid bash syntax"

# Test 2: Verify --enable-pic flag is present
RUN echo "🎯 Testing --enable-pic flag..." && \
    grep -q "\-\-enable-pic" /scripts/configure-ffmpeg.sh && \
    grep -q "\-\-enable-pic" /scripts/configure-ffmpeg-test.sh && \
    echo "✅ PIC flag found in all configs"

# Test 3: Verify deprecated flags are removed
RUN echo "🚫 Testing deprecated flags..." && \
    ! grep -q "\-\-enable-mv-export" /scripts/configure-ffmpeg*.sh && \
    echo "✅ No deprecated mv-export flags found"

# Test 4: Verify ARM64 architecture
RUN echo "🏗️ Testing ARM64 architecture..." && \
    grep -q "arm64" /scripts/configure-ffmpeg-test.sh && \
    echo "✅ ARM64 architecture confirmed"

# Test 5: Verify minimal test configuration
RUN echo "⚡ Testing minimal configuration..." && \
    grep -q "\-\-disable-everything" /scripts/configure-ffmpeg-test.sh && \
    grep -q "\-\-enable-ffmpeg" /scripts/configure-ffmpeg-test.sh && \
    echo "✅ Minimal configuration validated"

# Create ultra-fast success report
RUN echo "🎉 ULTRA-FAST Script Validation PASSED" > /tmp/test-result.txt && \
    echo "Test date: $(date)" >> /tmp/test-result.txt && \
    echo "Scripts validated: ✅ ALL" >> /tmp/test-result.txt && \
    echo "PIC support: ✅ ENABLED" >> /tmp/test-result.txt && \
    echo "ARM64 target: ✅ CONFIRMED" >> /tmp/test-result.txt && \
    echo "Deprecated flags: ✅ REMOVED" >> /tmp/test-result.txt && \
    echo "Minimal config: ✅ VALIDATED" >> /tmp/test-result.txt && \
    echo "Test time: ~5-10 seconds" >> /tmp/test-result.txt && \
    echo "Status: READY FOR GITHUB ACTIONS" >> /tmp/test-result.txt

WORKDIR /tmp
CMD ["cat", "/tmp/test-result.txt"] 