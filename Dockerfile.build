ARG BASE_IMAGE=ubuntu:22.04
FROM ${BASE_IMAGE}

# This will be built from ffmpeg-configure:latest in the pipeline
# For standalone testing, it falls back to ubuntu base

# Ensure we're in the right directory
WORKDIR /src/ffmpeg-src

# Verify we have configure artifacts (skip if not available for standalone)
RUN if [ -f config.h ] && [ -f Makefile ]; then \
        echo "✅ Configure artifacts present"; \
    else \
        echo "⚠️ Running standalone - configure artifacts missing"; \
        echo "This dockerfile is intended to be built from ffmpeg-configure:latest"; \
        exit 1; \
    fi

# Get CPU count for parallel build
RUN echo "🛠️ Build environment:" \
    && echo "CPU cores: $(nproc)" \
    && echo "Memory: $(free -h | head -2)" \
    && echo "Disk space: $(df -h /src | tail -1)"

# Build FFmpeg with full parallelization
RUN echo "🏗️ Building FFmpeg..." \
    && make -j$(nproc) 2>/dev/null \
    && echo "✅ FFmpeg build completed successfully"

# Verify built binaries
RUN echo "🧪 Binary verification..." \
    && test -f ffmpeg || (echo "❌ ffmpeg binary missing" && exit 1) \
    && test -f ffprobe || (echo "❌ ffprobe binary missing" && exit 1) \
    && ./ffmpeg -version | head -3 \
    && ./ffprobe -version | head -1 \
    && echo "✅ Binaries verified"

# Test motion vectors support in built binaries
RUN echo "🎯 Motion vectors support test..." \
    && ./ffmpeg -hide_banner -filters 2>/dev/null | grep codecview \
    && echo "✅ Motion vectors filter available" \
    || echo "⚠️ Motion vectors filter not found"

# Test hardware info and optimization
RUN echo "📊 Binary optimization info:" \
    && file ./ffmpeg \
    && ldd ./ffmpeg 2>/dev/null | head -5 || echo "Static binary (no dynamic deps)" \
    && ls -lh ffmpeg ffprobe \
    && echo "✅ Build analysis complete"

# Create downloadable artifacts
RUN mkdir -p /artifacts \
    && cp ffmpeg ffprobe /artifacts/ \
    && cp ffplay /artifacts/ 2>/dev/null || echo "ffplay not built (OK)" \
    && cd /artifacts \
    && tar -czf ffmpeg-linux-arm64-$(date +%Y%m%d).tar.gz * \
    && sha256sum ffmpeg-linux-arm64-*.tar.gz > checksums.txt \
    && echo "✅ Artifacts packaged for download"

# Copy binaries to final location  
RUN mkdir -p /dist \
    && cp /artifacts/ffmpeg /artifacts/ffprobe /dist/ \
    && cp /artifacts/ffplay /dist/ 2>/dev/null || echo "ffplay not built (OK)" \
    && echo "✅ Binaries ready in /dist/"

# Final verification with artifact info
RUN echo "🎉 Final verification:" \
    && /dist/ffmpeg -version | head -1 \
    && /dist/ffprobe -version | head -1 \
    && echo "Build timestamp: $(date)" \
    && echo "📦 Artifacts ready:" \
    && ls -lh /artifacts/ \
    && echo "✅ FFmpeg build completed successfully!"

WORKDIR /dist
CMD ["./ffmpeg", "-version"] 