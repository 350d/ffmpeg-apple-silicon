# Stage 1: Dependencies
FROM ubuntu:22.04 AS dependencies

# Prevent interactive prompts
ENV DEBIAN_FRONTEND=noninteractive

# Install all dependencies in one layer for optimal caching
RUN apt-get update 2>/dev/null && apt-get install -y \
    # Basic build tools
    build-essential \
    pkg-config \
    curl \
    wget \
    git \
    # Multimedia build tools
    nasm \
    yasm \
    cmake \
    autoconf \
    automake \
    libtool \
    # Codec development libraries
    libx264-dev \
    libx265-dev \
    libmp3lame-dev \
    libopus-dev \
    libvorbis-dev \
    libvpx-dev \
    libwebp-dev \
    libfdk-aac-dev \
    libfreetype6-dev \
    libfontconfig1-dev \
    # Additional multimedia dependencies
    libass-dev \
    libtheora-dev \
    libxvidcore-dev \
    libspeex-dev \
    libgnutls28-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Download and prepare FFmpeg source but don't configure yet
WORKDIR /src
RUN curl -L "https://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2" -o ffmpeg.tar.bz2 \
    && tar -xjf ffmpeg.tar.bz2 \
    && mv ffmpeg ffmpeg-src \
    && rm ffmpeg.tar.bz2

# Verify all dependencies are available
WORKDIR /src/ffmpeg-src
RUN ./configure --help > /tmp/configure_help.txt \
    && echo "✅ FFmpeg configure available" \
    && pkg-config --list-all | sort > /tmp/available_packages.txt \
    && echo "✅ Package config working"

# Stage 2: Configure
FROM dependencies AS configure

# Configure FFmpeg with minimal working options including motion vectors support
RUN echo "🔧 Configuring FFmpeg for ARM64..." \
    && ./configure \
        --prefix=/usr/local \
        --arch=arm64 \
        --target-os=linux \
        --enable-gpl \
        --enable-libx264 \
        --enable-pic \
        --enable-runtime-cpudetect \
        --enable-avfilter \
        --disable-shared \
        --enable-static \
        --extra-cflags="-O3 -fPIC" \
    && echo "✅ FFmpeg configured successfully"

# Verify configure results
RUN echo "📋 Configure verification:" \
    && test -f config.h && echo "✅ config.h present" || echo "❌ config.h missing" \
    && test -f Makefile && echo "✅ Makefile present" || echo "❌ Makefile missing" \
    && echo "🎯 Motion vectors support:" \
    && grep -E "(AVFILTER).*1" config.h | head -3 || echo "Options in config"

# Stage 3: Build
FROM configure AS build

# Build FFmpeg binaries
RUN echo "🏗️ Building FFmpeg..." \
    && make -j$(nproc) 2>/dev/null \
    && echo "✅ FFmpeg build completed"

# Create distribution directory and copy binaries
RUN mkdir -p /dist \
    && cp ffmpeg /dist/ \
    && cp ffprobe /dist/ \
    && echo "📦 Binaries copied to /dist/"

# Verify binaries
RUN echo "🧪 Binary verification:" \
    && ls -la /dist/ \
    && /dist/ffmpeg -version | head -2 \
    && /dist/ffprobe -version | head -1 \
    && echo "🎯 Motion vectors test:" \
    && /dist/ffmpeg -hide_banner -filters | grep codecview && echo "✅ Motion vectors available" || echo "⚠️ Not found" \
    && echo "📊 Binary info:" \
    && file /dist/ffmpeg \
    && ls -lh /dist/ffmpeg /dist/ffprobe

# Create artifacts with checksums
RUN mkdir -p /artifacts \
    && cp /dist/* /artifacts/ \
    && cd /artifacts \
    && tar -czf ffmpeg-linux-arm64-$(date +%Y%m%d).tar.gz ffmpeg ffprobe \
    && sha256sum * > checksums.txt \
    && echo "📦 Artifacts ready in /artifacts/"

# Final stage - minimal runtime
FROM ubuntu:22.04 AS final
COPY --from=build /dist /dist
COPY --from=build /artifacts /artifacts
WORKDIR /dist
CMD ["./ffmpeg"] 