name: Quick Test Build

on:
  push:
    branches: [ main, master ]
    paths:
      - 'scripts/configure-ffmpeg*.sh'
      - 'Dockerfile*'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'scripts/configure-ffmpeg*.sh'
      - 'Dockerfile*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/ffmpeg-test

jobs:
  quick-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Make scripts executable
      run: |
        chmod +x scripts/configure-ffmpeg-test.sh
        
    - name: Quick test build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.test
        platforms: linux/arm64
        push: false
        tags: ffmpeg-test:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Test FFmpeg functionality
      run: |
        # Test basic functionality
        docker run --rm ffmpeg-test:latest ffmpeg -version
        
        # Test encoding
        docker run --rm ffmpeg-test:latest \
          ffmpeg -f lavfi -i testsrc2=duration=2:size=320x240:rate=15 \
          -c:v libx264 -preset ultrafast -f null /dev/null
          
        # Test motion vector export (modern API)
        docker run --rm ffmpeg-test:latest \
          ffmpeg -f lavfi -i testsrc2=duration=1:size=160x120:rate=10 \
          -c:v libx264 -flags2 +export_mvs -f null /dev/null
          
        echo "✅ Quick test passed!"
        
    - name: Validate configuration
      run: |
        # Check that modern motion vector API works
        docker run --rm ffmpeg-test:latest \
          ffmpeg -hide_banner -f lavfi -i testsrc2=duration=0.1:size=64x64:rate=5 \
          -c:v libx264 -flags2 +export_mvs -movflags +faststart -f null /dev/null 2>&1 | \
          grep -v "deprecated" || echo "Modern motion vector API test completed"
        
        echo "✅ Modern motion vector API validated!"

  test-config-changes:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Validate configuration syntax
      run: |
        # Check all configure scripts for syntax
        bash -n scripts/configure-ffmpeg.sh
        bash -n scripts/configure-ffmpeg-test.sh
        bash -n scripts/configure-ffmpeg-example.sh
        
        echo "✅ All configuration scripts have valid syntax"
        
    - name: Check for important flags
      run: |
        if grep -q "\-\-enable-pic" scripts/configure-ffmpeg.sh; then
          echo "✅ PIC flag is enabled in main config"
        else
          echo "❌ PIC flag is missing in main config"
          exit 1
        fi
        
        if grep -q "\-\-enable-pic" scripts/configure-ffmpeg-test.sh; then
          echo "✅ PIC flag is enabled in test config"
        else
          echo "❌ PIC flag is missing in test config"
          exit 1
        fi
        
    - name: Check for Russian text
      run: |
        # Check for Cyrillic characters in source files
        if find . -name "*.md" -o -name "*.yml" -o -name "*.sh" -o -name "Dockerfile*" | \
           xargs grep -l '[А-Яа-я]' 2>/dev/null; then
          echo "❌ Found Russian text in files:"
          find . -name "*.md" -o -name "*.yml" -o -name "*.sh" -o -name "Dockerfile*" | \
            xargs grep -l '[А-Яа-я]' 2>/dev/null || true
          exit 1
        else
          echo "✅ No Russian text found in source files"
        fi 