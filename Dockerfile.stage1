# Stage 1: Base System + Core Libraries (Target: ~10 minutes)
FROM --platform=linux/arm64 ubuntu:22.04 AS stage1-base

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC
ENV CFLAGS="-w -O2"
ENV CXXFLAGS="-w -O2"
ENV CPPFLAGS="-w"
ENV LDFLAGS="-w"

# Set build environment
ENV FFMPEG_BUILD_ROOT=/opt/ffmpeg
ENV SOURCE_DIR=/opt/ffmpeg/source
ENV PKG_CONFIG_PATH=/opt/ffmpeg/lib/pkgconfig

# Install system dependencies (5-7 minutes)
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    cmake \
    ninja-build \
    nasm \
    yasm \
    pkg-config \
    autoconf \
    automake \
    libtool \
    meson \
    python3 \
    python3-pip \
    wget \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* && \
    echo "✅ [1/7] System dependencies installed"

# Create directories
RUN mkdir -p "$FFMPEG_BUILD_ROOT" "$SOURCE_DIR"

# Download and build core libraries (3-5 minutes)
WORKDIR $SOURCE_DIR
RUN echo "🔄 [1/7] Core Libraries Stage (Target: 10min)" && \
    curl -L "https://github.com/madler/zlib/archive/refs/tags/v1.3.tar.gz" -o zlib.tar.gz && \
    curl -L "https://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.17.tar.gz" -o libiconv.tar.gz && \
    tar -xzf zlib.tar.gz && rm zlib.tar.gz && \
    tar -xzf libiconv.tar.gz && rm libiconv.tar.gz && \
    echo "📦 Core sources downloaded"

# Build zlib (fast)
RUN cd zlib-* && \
    ./configure --prefix=$FFMPEG_BUILD_ROOT --static && \
    make -j$(nproc) && make install && \
    echo "✅ zlib built"

# Build libiconv (fast)
RUN cd libiconv-* && \
    ./configure --prefix=$FFMPEG_BUILD_ROOT --disable-shared --enable-static && \
    make -j$(nproc) && make install && \
    echo "✅ libiconv built"

# Create stage marker
RUN echo "stage1-complete-$(date +%Y%m%d-%H%M)" > /opt/ffmpeg/stage1.marker && \
    echo "📊 Stage 1: Core libraries completed" && \
    echo "📁 Build root: $FFMPEG_BUILD_ROOT" && \
    echo "📈 Libraries: $(ls -1 $FFMPEG_BUILD_ROOT/lib/*.a 2>/dev/null | wc -l)"

WORKDIR /opt/ffmpeg
CMD ["cat", "/opt/ffmpeg/stage1.marker"] 